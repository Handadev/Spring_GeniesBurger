<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="ProductMapper">
  	<sql id="search">
  		<if test="range != null">
  			<trim prefix="and (" suffix=")">
  				<choose>
  					<when test="range == 'tcw'.toString()">
  						title like '%'||#{keyword}||'%' or
  						content like '%'||#{keyword}||'%' or
  						writer like '%'||#{keyword}||'%' 
  					</when>
  					<when test="range == 't'.toString()">
  						title like '%'||#{keyword}||'%'
  					</when>
  					<when test="range == 'c'.toString()">
  						content like '%'||#{keyword}||'%'
  					</when>
  					<when test="range == 'w'.toString()">
  						writer like '%'||#{keyword}||'%' 
  					</when>
  					<when test="range == 'tc'.toString()">
  						title like '%'||#{keyword}||'%' or
  						content like '%'||#{keyword}||'%'
  					</when>
  				</choose>
  			</trim>
  		</if>
  	</sql>
  
  	<insert id="reg" parameterType="pvo">
  		insert into tbl_product (pno, title, category, content, calorie, price) values
  		(seq_product_pno.nextval, #{title}, #{category}, #{content}, #{calorie}, #{price})
  	</insert>
  	
  	<!-- 페이징 -->
  	<!-- where pno > 0 절대적 조건을 선부여해서 sql 처리를 쉽게 한다 -->
  	<!-- 부등호 <같은 경우 태그로 인식하기 때문에 sql문을 전부 string으로 처리하라는
  	        명령을 부여하는 것이 좋다 <![CDATA[]]> -->
<!--   	<select id="list" parameterType="ppgvo" resultType="pvo">
  		<![CDATA[
  		select pno, content, title, price
  		from (select /*+INDEX_DESC(tbl_product pk_product)*/
  			rownum as rn, pno, content, title, price
			from tbl_product where pno > 0
  		]]>
  		<include refid="search"/>
  		<![CDATA[
  			and rownum <= #{pageIndex}* #{countPerPage})
  		where rn > (#{pageIndex}-1) * #{countPerPage}
  		]]>
  	</select> -->
  	
  	<select id="list" resultType="pvo">
  		select * from tbl_product
  	</select>
  	
  	<select id="detail" parameterType="int" resultType="pvo">
  		select * from tbl_product where pno = #{pno}
  	</select>
  	
  	<update id="mod" parameterType="pvo">
  		update tbl_product set 
  		title = #{title}, price = #{price}, content = #{content}, category = #{category}, 
  		calorie = #{calorie}, moddate = sysdate, cansale = #{cansale}
  		where pno = #{pno}
  	</update>
  	
  	<delete id="del" parameterType="int">
  		delete from tbl_product where pno = #{pno}
  	</delete>
  	
  	<select id="curpno" resultType="int">
  		select seq_product_pno.currval from dual
  	</select>
  	
  	<select id="totalcount" parameterType="ppgvo" resultType="int">
  		<![CDATA[
  		select count(pno) as cnt from tbl_product where pno > 0
  		]]>
  		<include refid="search"/>
  	</select>
  	
  	<update id="salesup" parameterType="hashmap">
  		update tbl_product set sales = sales + #{num} where pno = #{pno}
  	</update>
  	
  </mapper>